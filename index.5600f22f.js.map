{"mappings":"AAMA,IAAAA,EAAAC,EAAAC,KAAA,MACE,MAAMC,EAAaC,SAASC,cAAc,oBACpCC,EAAcF,SAASC,cAAc,qBACrCE,EAAYH,SAASC,cAAc,qBAKzC,SAASG,IACPD,EAAUE,UAAUC,OAAO,U,CAJ7BP,EAAWQ,iBAAiB,QAASH,GACrCF,EAAYK,iBAAiB,QAASH,EAKvC,EAXD,GAoBA,MACE,IAAII,EAAO,CACTC,cAAeT,SAASU,iBAAiB,qBACzCC,cAAeX,SAASC,cAAc,sBACtCW,MAAOZ,SAASC,cAAc,gBAC9BY,SAAUb,SAASC,cAAc,mBACjCa,KAAMd,SAASC,cAAc,SAkB/B,SAASc,IACPP,EAAKI,MAAMP,UAAUC,OAAO,oBAC5BE,EAAKK,SAASR,UAAUC,OAAO,uBAE/BE,EAAKM,KAAKT,UAAUC,OAAO,Y,CAnB7BE,EAAKC,cAAcO,SAAQ,SAAUC,GACnCA,EAAKV,iBAAiB,QAASQ,E,IAEjCP,EAAKG,cAAcJ,iBAAiB,QAASQ,GAG7Cf,SAASO,iBAAiB,WAAW,SAAUW,GAC3B,WAAdA,EAAMC,MACRX,EAAKI,MAAMP,UAAUe,IAAI,oBAAqBZ,EAAKK,SAASR,UAAUe,IAAI,uBAAwBZ,EAAKM,KAAKT,UAAUgB,OAAO,a,IAKjIb,EAAKK,SAASN,iBAAiB,QAASQ,EAQzC,EA9BD,GAsCa,IAAIO,OAAO,YAAa,CACnCC,WAAY,CACVC,OAAQ,sBACRC,OAAQ,yBA0BZzB,SAASO,iBAAiB,oBAAoB,KAC1C,IAAK,MAAMmB,KAAM1B,SAASU,iBAAiB,6BAA8B,CACrE,MAAMiB,EAAUD,EAAGE,aAAa,eAC5BC,EAAQ,IAAIC,IAAIJ,EAAGK,QAAQF,OAAS,KACpCG,EAAO,CAACC,GAAKC,MAAMC,KAAKR,GAAS,CAACS,EAAEC,IAAMR,EAAMS,IAAIF,GAAIH,EAAEI,EAAE,EAAGJ,IAAxD,CAA4D,GACnEM,EAAQ,IAAIZ,GAASa,WAAUJ,GAAKP,EAAMS,IAAIF,KAC9CK,EAAS,IAAIC,OAAOhB,EAAGK,QAAQU,QAAU,MAAO,KAChDE,EAAQC,IACJA,EAAQA,EAAMC,MAAMJ,IAAW,GACxBP,MAAMC,KAAKR,GAASS,IACvBQ,EAAM,KAAOR,GAAKP,EAAMS,IAAIF,KAAKQ,EAAME,SAAeV,KAG9DW,EAAS,KACL,MAAOC,EAAGf,GAAK,CAACP,EAAGuB,eAAgBvB,EAAGwB,cAAcC,KAAId,IACpDA,EAAIM,EAAMjB,EAAG0B,MAAMC,MAAM,EAAGhB,IAAIG,WAAUJ,GAAKP,EAAMS,IAAIF,MAChD,EAAGJ,EAAKA,EAAKsB,OAAO,GAAIC,EAAMvB,EAAKK,EAAE,IAAME,EAAOF,IAE/DX,EAAG0B,MAAQT,EAAMjB,EAAG0B,OAAOI,KAAI5D,MAAAC,CAAA,KAC/B6B,EAAG+B,kBAAkBT,EAAGf,GACxBsB,GAAO,CAAK,EAEpB,IAAIA,GAAO,EACX7B,EAAGnB,iBAAiB,WAAYmD,GAAMH,EAAiB,cAAVG,EAAEvC,MAC/CO,EAAGnB,iBAAiB,QAASwC,GAC7BrB,EAAGnB,iBAAiB,QAASwC,GAC7BrB,EAAGnB,iBAAiB,QAAQ,IAAMmB,EAAG0B,QAAUzB,IAAYD,EAAG0B,MAAM,K","sources":["src/index.js"],"sourcesContent":["/*\n  |==============================\n  | Mobile menu script\n  |==============================\n*/\n\n(() => {\n  const navOpenBtn = document.querySelector('[data-menu-open]');\n  const navCloseBtn = document.querySelector('[data-menu-close]');\n  const navMobile = document.querySelector('[data-nav-mobile]');\n\n  navOpenBtn.addEventListener('click', toggleNav);\n  navCloseBtn.addEventListener('click', toggleNav);\n\n  function toggleNav() {\n    navMobile.classList.toggle('is-open');\n  }\n})();\n\n\n/*\n  |==============================\n  | Modal window script\n  |==============================\n*/\n\n(() => {\n  var refs = {\n    openModalBtns: document.querySelectorAll('[data-modal-open]'),\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n    backdrop: document.querySelector('[data-backdrop]'),\n    body: document.querySelector('body'),\n  };\n\n  refs.openModalBtns.forEach(function (open) {\n    open.addEventListener('click', toggleModal);\n  });\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n\n  // Press Escape to close\n  document.addEventListener('keydown', function (event) {\n    if (event.key === 'Escape') {\n      refs.modal.classList.add('modal--is-hidden'), refs.backdrop.classList.add('backdrop--is-hidden'), refs.body.classList.remove('no-scroll');\n    }\n  });\n\n  // Click into backdrop to close\n  refs.backdrop.addEventListener('click', toggleModal);\n\n  function toggleModal() {\n    refs.modal.classList.toggle('modal--is-hidden');\n    refs.backdrop.classList.toggle('backdrop--is-hidden');\n    // Отключение скролла при вызове модальной формы\n    refs.body.classList.toggle('no-scroll');\n  }\n})();\n\n/*\n  |==============================\n  | Swiper script\n  |==============================\n*/\n\nvar swiper = new Swiper('.mySwiper', {\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n});\n\n/*\n  |==============================\n  | Custom validation \n  |==============================\n*/\n\n// const email = document.querySelectorAll('data-email');\n\n// email.addEventListener(\"input\", function (event) {\n//   if (email.validity.typeMismatch) {\n//     email.setCustomValidity(\"I am expecting an e-mail address!\");\n//   } else {\n//     email.setCustomValidity(\"\");\n//   }\n// });\n\n/*\n  |==============================\n  | Masked Inputs\n  |==============================\n*/\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    for (const el of document.querySelectorAll(\"[placeholder][data-slots]\")) {\n        const pattern = el.getAttribute(\"placeholder\"),\n            slots = new Set(el.dataset.slots || \"_\"),\n            prev = (j => Array.from(pattern, (c,i) => slots.has(c)? j=i+1: j))(0),\n            first = [...pattern].findIndex(c => slots.has(c)),\n            accept = new RegExp(el.dataset.accept || \"\\\\d\", \"g\"),\n            clean = input => {\n                input = input.match(accept) || [];\n                return Array.from(pattern, c =>\n                    input[0] === c || slots.has(c) ? input.shift() || c : c\n                );\n            },\n            format = () => {\n                const [i, j] = [el.selectionStart, el.selectionEnd].map(i => {\n                    i = clean(el.value.slice(0, i)).findIndex(c => slots.has(c));\n                    return i<0? prev[prev.length-1]: back? prev[i-1] || first: i;\n                });\n                el.value = clean(el.value).join``;\n                el.setSelectionRange(i, j);\n                back = false;\n            };\n        let back = false;\n        el.addEventListener(\"keydown\", (e) => back = e.key === \"Backspace\");\n        el.addEventListener(\"input\", format);\n        el.addEventListener(\"focus\", format);\n        el.addEventListener(\"blur\", () => el.value === pattern && (el.value=\"\"));\n    }\n});"],"names":["$1f0dc3b9307be026$var$t","$1f0dc3b9307be026$var$_","t1","navOpenBtn","document","querySelector","navCloseBtn","navMobile","toggleNav","classList","toggle","addEventListener","refs","openModalBtns","querySelectorAll","closeModalBtn","modal","backdrop","body","toggleModal","forEach","open","event","key","add","remove","Swiper","navigation","nextEl","prevEl","el","pattern","getAttribute","slots","Set","dataset","prev","j","Array","from","c","i","has","first","findIndex","accept","RegExp","clean","input","match","shift","format","i1","selectionStart","selectionEnd","map","value","slice","length","back","join","setSelectionRange","e"],"version":3,"file":"index.5600f22f.js.map"}